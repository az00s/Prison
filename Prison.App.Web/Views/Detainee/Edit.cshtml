@model DetaineeEditViewModel

@{
    ViewBag.Title = "Редактировать";
}

<h2>Редактировать задержанного</h2>

@using (Html.BeginForm("Edit","Detainee",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DetaineeID)

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BirstDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div class="input-group datetimepicker">
                <span class="input-group-addon">
                    <span class="glyphicon-calendar glyphicon"></span>
                </span>
                @Html.EditorFor(model => model.BirstDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            @Html.ValidationMessageFor(model => model.BirstDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.Action("GetMaritalDropDown", "Status",new { selectedID = Model.MaritalStatusID})
            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkPlace, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.WorkPlace, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WorkPlace, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div >
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.HiddenFor(model=>model.ImagePath)
                <div class="input-group">
                    <label class="input-group-btn">
                        <span class="btn btn-default">
                            Выбрать файл… <input type="file" name="file" style="display: none;">
                        </span>
                    </label>
                    <input type="text" class="form-control" readonly="">
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ResidenceAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.ResidenceAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ResidenceAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdditionalData, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.AdditionalData, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdditionalData, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumbers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3" id="dvPhoneNumbers">
            @for (int i=0;i < Model.PhoneNumbers.Count();i++)
            {
                if (i == 0)
                {
                    <div class="input-group">
                
                            <span class="input-group-addon">
                                <span class="glyphicon-plus-sign glyphicon" id="btnAddNumber"></span>
                            </span>
                                @Html.TextBox($"PhoneNumbers[{i}]", Model.PhoneNumbers.ToList()[i], new { @class = "form-control",@required="required" })
                            <span class="input-group-addon">
                                <span class="glyphicon-minus-sign glyphicon" id="btnRemoveNumber"></span>
                            </span>
               
                    </div>
                }
                else
                {
                    @Html.TextBox($"PhoneNumbers[{i}]", Model.PhoneNumbers.ToList()[i], new { @class = "form-control", @required = "required" })

                }
            }
            @Html.ValidationMessageFor(model => model.PhoneNumbers, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-3">
            <div class="btn-group">
                @Html.ActionLink("Назад", "Index",null,new { @class="btn btn-default"})
                <input type="submit" value="Сохранить" class="btn btn-success" />
            </div>
        </div>
    </div>
</div>
}

@section scripts {
    <script type="text/javascript" src="~/Scripts/moment-with-locales.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <link rel="stylesheet" href="~/Content/bootstrap-datetimepicker.min.css" />
    <script src="~/Scripts/Detainee/EditDetaineeScript.js"></script>
}