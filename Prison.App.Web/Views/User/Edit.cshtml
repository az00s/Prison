@model Prison.App.Web.Models.User.UserEditViewModel

@{
    ViewBag.Title = "Редактировать";
}

<h2>Редактировать пользователя</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)


        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="dvRolesDrdwn">
                @for (int i = 0; i < Model.Roles.Length; i++)
                {
                    @Html.DropDownList("Roles[" + i + "].RoleID", new SelectList(Model.AllRoles, "RoleID", "RoleName", Model.Roles[i].RoleID), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a class="btn btn-primary" id="btnAddRoles">Добавить роль</a>
                    <a class="btn btn-danger" id="btnRemoveRoles">Удалить роль</a>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <input type="button" onclick="history.back()" class="btn btn-default" value="Назад">
                    <input type="submit" value="Сохранить" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}


<script src="~/Scripts/AddDeleteRoleScript.js"></script>
