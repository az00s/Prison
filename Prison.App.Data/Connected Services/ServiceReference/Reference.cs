//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prison.App.Data.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Blurb", Namespace="http://schemas.datacontract.org/2004/07/Prison.AdvertismentService")]
    [System.SerializableAttribute()]
    public partial class Blurb : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlurbContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlurbHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlurbIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlurbContent {
            get {
                return this.BlurbContentField;
            }
            set {
                if ((object.ReferenceEquals(this.BlurbContentField, value) != true)) {
                    this.BlurbContentField = value;
                    this.RaisePropertyChanged("BlurbContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlurbHeader {
            get {
                return this.BlurbHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.BlurbHeaderField, value) != true)) {
                    this.BlurbHeaderField = value;
                    this.RaisePropertyChanged("BlurbHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlurbID {
            get {
                return this.BlurbIDField;
            }
            set {
                if ((this.BlurbIDField.Equals(value) != true)) {
                    this.BlurbIDField = value;
                    this.RaisePropertyChanged("BlurbID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Prison.AdvertismentService.Contracts", ConfigurationName="ServiceReference.IAdContract")]
    public interface IAdContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Prison.AdvertismentService.Contracts/IAdContract/GetAd", ReplyAction="http://Prison.AdvertismentService.Contracts/IAdContract/GetAdResponse")]
        Prison.App.Data.ServiceReference.Blurb[] GetAd(int numOfElements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Prison.AdvertismentService.Contracts/IAdContract/GetAd", ReplyAction="http://Prison.AdvertismentService.Contracts/IAdContract/GetAdResponse")]
        System.Threading.Tasks.Task<Prison.App.Data.ServiceReference.Blurb[]> GetAdAsync(int numOfElements);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdContractChannel : Prison.App.Data.ServiceReference.IAdContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdContractClient : System.ServiceModel.ClientBase<Prison.App.Data.ServiceReference.IAdContract>, Prison.App.Data.ServiceReference.IAdContract {
        
        public AdContractClient() {
        }
        
        public AdContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Prison.App.Data.ServiceReference.Blurb[] GetAd(int numOfElements) {
            return base.Channel.GetAd(numOfElements);
        }
        
        public System.Threading.Tasks.Task<Prison.App.Data.ServiceReference.Blurb[]> GetAdAsync(int numOfElements) {
            return base.Channel.GetAdAsync(numOfElements);
        }
    }
}
